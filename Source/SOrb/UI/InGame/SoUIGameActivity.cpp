// Copyright (c) Csaba Molnar & Daniel Butum. All Rights Reserved.
#include "SoUIGameActivity.h"

#include "Basic/Helpers/SoStaticHelper.h"
#include "Character/SoCharacter.h"
#include "Character/SoCharStates/SoAInUI.h"

DEFINE_LOG_CATEGORY(LogSoUIActivity);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
USoInGameUIActivity::USoInGameUIActivity(const FObjectInitializer& PCIP)
	: Super(PCIP)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void USoInGameUIActivity::NativeConstruct()
{
	Super::NativeConstruct();

	ASoCharacter* SoCharacter = USoStaticHelper::GetPlayerCharacterAsSoCharacter(this);
	if (bRegisterAsActivity && SoCharacter != nullptr && SoCharacter->SoAInUI != nullptr)
		SoCharacter->SoAInUI->RegisterInGameActivity(this);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void USoInGameUIActivity::NativeDestruct()
{
	Super::NativeDestruct();

	ASoCharacter* SoCharacter = USoStaticHelper::GetPlayerCharacterAsSoCharacter(this);
	if (SoCharacter != nullptr && SoCharacter->SoAInUI != nullptr)
		SoCharacter->SoAInUI->UnregisterInGameActivity(this);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::SetInGameActivityEnabled_Implementation(UObject* Source, bool bEnable)
{
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::HandleCommand_Implementation(ESoUICommand Command)
{
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::Update_Implementation(float DeltaSeconds)
{
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::IsOpened_Implementation() const
{
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::ShouldHideUIElements_Implementation() const
{
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::ShouldKeepMusicFromPreviousUIActivity_Implementation() const
{
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::IsActiveInPausedGame_Implementation() const
{
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::IsActiveInDilatedTime_Implementation(float CurrentTimeDilation) const
{
	return false;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool USoInGameUIActivity::ShouldParentIgnoreTheNextMenuBack_Implementation() const
{
	return false;
}
